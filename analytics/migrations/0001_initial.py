# Generated by Django 5.2.6 on 2025-10-01 12:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0002_company_address_company_base_currency_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReconciliationMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for these metrics')),
                ('total_transactions', models.IntegerField(default=0, help_text='Total transactions processed')),
                ('manually_matched', models.IntegerField(default=0, help_text='Matched without AI/rule help')),
                ('rule_matched', models.IntegerField(default=0, help_text='Matched using bank rules')),
                ('ai_matched', models.IntegerField(default=0, help_text='Matched using AI patterns')),
                ('hybrid_matched', models.IntegerField(default=0, help_text='Matched using both rules and AI')),
                ('unmatched', models.IntegerField(default=0, help_text='Still unmatched')),
                ('avg_time_per_transaction', models.FloatField(default=0.0, help_text='Average seconds per transaction')),
                ('total_time_saved', models.FloatField(default=0.0, help_text='Total hours saved by automation')),
                ('automation_rate', models.FloatField(default=0.0, help_text='Percentage auto-matched (0-100)')),
                ('ai_accuracy', models.FloatField(default=0.0, help_text='% of AI suggestions accepted')),
                ('rule_accuracy', models.FloatField(default=0.0, help_text='% of rule suggestions accepted')),
                ('user_corrections', models.IntegerField(default=0, help_text='Number of user modifications to suggestions')),
                ('total_amount_reconciled', models.DecimalField(decimal_places=2, default=0, help_text='Total monetary amount reconciled', max_digits=15)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reconciliation Metrics',
                'verbose_name_plural': 'Reconciliation Metrics',
                'db_table': 'analytics_reconciliation_metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('model_accuracy', models.FloatField(default=0.0, help_text='Overall AI accuracy %')),
                ('model_precision', models.FloatField(default=0.0, help_text='AI precision % (true positives / all positives)')),
                ('model_recall', models.FloatField(default=0.0, help_text='AI recall % (true positives / all actual positives)')),
                ('f1_score', models.FloatField(default=0.0, help_text='F1 score (harmonic mean of precision and recall)')),
                ('training_data_size', models.IntegerField(default=0, help_text='Number of historical matches available for training')),
                ('pattern_count', models.IntegerField(default=0, help_text='Total number of patterns')),
                ('active_patterns', models.IntegerField(default=0, help_text='Number of active patterns')),
                ('active_users', models.IntegerField(default=0, help_text='Number of users active today')),
                ('api_calls', models.IntegerField(default=0, help_text='Number of API calls made')),
                ('avg_response_time', models.FloatField(default=0.0, help_text='Average API response time in milliseconds')),
                ('errors_count', models.IntegerField(default=0, help_text='Number of errors encountered')),
                ('warnings_count', models.IntegerField(default=0, help_text='Number of warnings generated')),
            ],
            options={
                'verbose_name': 'System Health',
                'verbose_name_plural': 'System Health Records',
                'db_table': 'analytics_system_health',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('transactions_processed', models.IntegerField(default=0, help_text='Number of transactions processed')),
                ('avg_time_per_transaction', models.FloatField(default=0.0, help_text='Average seconds per transaction')),
                ('fastest_match', models.FloatField(default=0.0, help_text='Fastest match time in seconds')),
                ('slowest_match', models.FloatField(default=0.0, help_text='Slowest match time in seconds')),
                ('accepted_suggestions', models.IntegerField(default=0, help_text='Number of AI/rule suggestions accepted')),
                ('rejected_suggestions', models.IntegerField(default=0, help_text='Number of AI/rule suggestions rejected')),
                ('manual_matches', models.IntegerField(default=0, help_text='Number of purely manual matches')),
                ('ai_usage_rate', models.FloatField(default=0.0, help_text='% of time using AI/rule suggestions (0-100)')),
            ],
            options={
                'verbose_name': 'User Performance',
                'verbose_name_plural': 'User Performance Records',
                'db_table': 'analytics_user_performance',
                'ordering': ['-date', 'user'],
            },
        ),
        migrations.CreateModel(
            name='PatternAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('times_suggested', models.IntegerField(default=0, help_text='How many times suggested today')),
                ('times_accepted', models.IntegerField(default=0, help_text='How many times accepted')),
                ('times_rejected', models.IntegerField(default=0, help_text='How many times rejected')),
                ('times_modified', models.IntegerField(default=0, help_text='How many times modified')),
                ('acceptance_rate', models.FloatField(default=0.0, help_text='Acceptance rate % for this day')),
                ('avg_confidence', models.FloatField(default=0.0, help_text='Average confidence score when suggested')),
                ('avg_response_time', models.FloatField(default=0.0, help_text='Average user response time in seconds')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pattern_analytics', to='company.company')),
            ],
            options={
                'verbose_name': 'Pattern Analytics',
                'verbose_name_plural': 'Pattern Analytics',
                'db_table': 'analytics_pattern_performance',
                'ordering': ['-date'],
            },
        ),
    ]

# Generated by Django 5.2.6 on 2025-09-12 03:38

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0002_company_address_company_base_currency_and_more'),
        ('journal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Asset type name (e.g., Computer Equipment)', max_length=100, unique=True)),
                ('code', models.CharField(help_text='Short code for asset type', max_length=10, unique=True)),
                ('default_life_years', models.IntegerField(default=5, help_text='Default useful life in years', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('default_depreciation_method', models.CharField(choices=[('none', 'No depreciation'), ('straight_line', 'Straight Line'), ('declining_balance', 'Declining balance'), ('declining_balance_150', 'Declining balance (150%)'), ('declining_balance_200', 'Declining balance (200%)'), ('full_purchase', 'Full depreciation at purchase')], default='straight_line', help_text='Default depreciation method for this asset type', max_length=30)),
                ('description', models.TextField(blank=True, help_text='Detailed description of asset type')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this asset type is available for new assets')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Asset Type',
                'verbose_name_plural': 'Asset Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FixedAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Asset name (e.g., Dell Laptop)', max_length=200, verbose_name='Asset Name')),
                ('number', models.CharField(help_text='Auto-generated asset number', max_length=50, unique=True, verbose_name='Asset Number')),
                ('description', models.TextField(blank=True, help_text='Detailed asset description', verbose_name='Description')),
                ('serial_number', models.CharField(blank=True, help_text='Manufacturer serial number', max_length=100, verbose_name='Serial Number')),
                ('location', models.CharField(blank=True, help_text='Department/Location (e.g., Main Office, IT Department)', max_length=200, verbose_name='Location/Department')),
                ('supplier', models.CharField(blank=True, help_text='Supplier/vendor name', max_length=200, verbose_name='Supplier')),
                ('purchase_price', models.DecimalField(decimal_places=2, help_text='Original purchase price', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Purchase Price')),
                ('purchase_date', models.DateField(help_text='Date when asset was purchased', verbose_name='Purchase Date')),
                ('depreciation_start_date', models.DateField(blank=True, help_text='Date when depreciation starts (defaults to purchase date)', null=True, verbose_name='Depreciation Start Date')),
                ('residual_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Expected value at end of useful life', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Residual Value')),
                ('cost_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum cost threshold for depreciation', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Cost Limit')),
                ('depreciation_method', models.CharField(choices=[('none', 'No depreciation'), ('straight_line', 'Straight Line'), ('declining_balance', 'Declining balance'), ('declining_balance_150', 'Declining balance (150%)'), ('declining_balance_200', 'Declining balance (200%)'), ('full_purchase', 'Full depreciation at purchase')], default='straight_line', help_text='Method used to calculate depreciation', max_length=30, verbose_name='Depreciation Method')),
                ('averaging_method', models.CharField(choices=[('full_month', 'Full month'), ('actual_days', 'Actual days')], default='full_month', help_text='Method for handling partial periods', max_length=20, verbose_name='Averaging Method')),
                ('depreciation_basis', models.CharField(choices=[('rate', 'Rate'), ('effective_life', 'Effective life')], default='effective_life', help_text='Whether to use rate or effective life for calculations', max_length=20, verbose_name='Depreciation Basis')),
                ('depreciation_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Depreciation rate as percentage (0.01-100.00)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Depreciation Rate (%)')),
                ('effective_life', models.IntegerField(blank=True, help_text='Asset useful life in years (1-50)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Effective Life (Years)')),
                ('warranty_expiry', models.DateField(blank=True, help_text='Date when warranty expires', null=True, verbose_name='Warranty Expiry')),
                ('expected_disposal_date', models.DateField(blank=True, help_text='Expected date for asset disposal', null=True, verbose_name='Expected Disposal Date')),
                ('disposal_method', models.CharField(blank=True, choices=[('sale', 'Sale'), ('trade', 'Trade-in'), ('scrap', 'Scrap'), ('donation', 'Donation'), ('transfer', 'Transfer')], help_text='Planned method for asset disposal', max_length=20, verbose_name='Disposal Method')),
                ('estimated_disposal_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Expected value when disposing asset', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimated Disposal Value')),
                ('separate_tax_depreciation', models.BooleanField(default=False, help_text='Whether to use separate tax depreciation calculations', verbose_name='Use Separate Tax Depreciation')),
                ('tax_depreciation_method', models.CharField(blank=True, choices=[('', 'Same as book'), ('macrs', 'MACRS'), ('section179', 'Section 179'), ('bonus', 'Bonus Depreciation'), ('custom', 'Custom')], help_text='Tax depreciation method (if different from book)', max_length=30, verbose_name='Tax Depreciation Method')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('registered', 'Registered'), ('disposed', 'Disposed'), ('sold', 'Sold')], default='draft', help_text='Current status of the asset', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_type', models.ForeignKey(help_text='Asset category/type', on_delete=django.db.models.deletion.PROTECT, to='assets.assettype', verbose_name='Asset Type')),
                ('company', models.ForeignKey(help_text='Company that owns this asset', on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('created_by', models.ForeignKey(help_text='User who created this asset', on_delete=django.db.models.deletion.PROTECT, related_name='created_assets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fixed Asset',
                'verbose_name_plural': 'Fixed Assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DepreciationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Depreciation year', verbose_name='Year')),
                ('period_start_date', models.DateField(help_text='Start date of depreciation period', verbose_name='Period Start')),
                ('period_end_date', models.DateField(help_text='End date of depreciation period', verbose_name='Period End')),
                ('beginning_book_value', models.DecimalField(decimal_places=2, help_text='Book value at beginning of period', max_digits=15, verbose_name='Beginning Book Value')),
                ('depreciation_amount', models.DecimalField(decimal_places=2, help_text='Depreciation amount for this period', max_digits=15, verbose_name='Depreciation Amount')),
                ('accumulated_depreciation', models.DecimalField(decimal_places=2, help_text='Total accumulated depreciation', max_digits=15, verbose_name='Accumulated Depreciation')),
                ('ending_book_value', models.DecimalField(decimal_places=2, help_text='Book value at end of period', max_digits=15, verbose_name='Ending Book Value')),
                ('is_tax_schedule', models.BooleanField(default=False, help_text='Whether this is tax depreciation schedule', verbose_name='Tax Schedule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(help_text='Associated fixed asset', on_delete=django.db.models.deletion.CASCADE, related_name='depreciation_schedules', to='assets.fixedasset')),
            ],
            options={
                'verbose_name': 'Depreciation Schedule',
                'verbose_name_plural': 'Depreciation Schedules',
                'ordering': ['asset', 'year'],
            },
        ),
        migrations.CreateModel(
            name='AssetTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('acquisition', 'Acquisition'), ('improvement', 'Improvement'), ('depreciation', 'Depreciation'), ('disposal', 'Disposal'), ('revaluation', 'Revaluation')], help_text='Type of transaction', max_length=30, verbose_name='Transaction Type')),
                ('transaction_date', models.DateField(help_text='Date of transaction', verbose_name='Transaction Date')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=15, verbose_name='Amount')),
                ('description', models.TextField(help_text='Detailed description of transaction', verbose_name='Description')),
                ('reference_number', models.CharField(blank=True, help_text='External reference number', max_length=100, verbose_name='Reference Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='User who created this transaction', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.ForeignKey(blank=True, help_text='Associated journal entry', null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal.journal')),
                ('asset', models.ForeignKey(help_text='Associated fixed asset', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='assets.fixedasset')),
            ],
            options={
                'verbose_name': 'Asset Transaction',
                'verbose_name_plural': 'Asset Transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetDisposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disposal_date', models.DateField(help_text='Date of disposal', verbose_name='Disposal Date')),
                ('disposal_method', models.CharField(choices=[('sale', 'Sale'), ('trade', 'Trade-in'), ('scrap', 'Scrap'), ('donation', 'Donation'), ('transfer', 'Transfer')], help_text='Method of disposal', max_length=20, verbose_name='Disposal Method')),
                ('disposal_value', models.DecimalField(decimal_places=2, help_text='Actual disposal value received', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Disposal Value')),
                ('book_value_at_disposal', models.DecimalField(decimal_places=2, help_text='Book value at time of disposal', max_digits=15, verbose_name='Book Value at Disposal')),
                ('gain_loss_amount', models.DecimalField(decimal_places=2, help_text='Gain or loss on disposal (positive = gain, negative = loss)', max_digits=15, verbose_name='Gain/Loss Amount')),
                ('buyer_details', models.TextField(blank=True, help_text='Details about buyer or disposal recipient', verbose_name='Buyer Details')),
                ('disposal_costs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costs incurred for disposal', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Disposal Costs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='User who processed the disposal', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.ForeignKey(blank=True, help_text='Journal entry for disposal transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal.journal')),
                ('asset', models.OneToOneField(help_text='Asset being disposed', on_delete=django.db.models.deletion.CASCADE, related_name='disposal', to='assets.fixedasset')),
            ],
            options={
                'verbose_name': 'Asset Disposal',
                'verbose_name_plural': 'Asset Disposals',
                'ordering': ['-disposal_date'],
            },
        ),
        migrations.AddIndex(
            model_name='fixedasset',
            index=models.Index(fields=['company', 'status'], name='assets_fixe_company_54943f_idx'),
        ),
        migrations.AddIndex(
            model_name='fixedasset',
            index=models.Index(fields=['asset_type', 'status'], name='assets_fixe_asset_t_103856_idx'),
        ),
        migrations.AddIndex(
            model_name='fixedasset',
            index=models.Index(fields=['purchase_date'], name='assets_fixe_purchas_788974_idx'),
        ),
        migrations.AddIndex(
            model_name='fixedasset',
            index=models.Index(fields=['number'], name='assets_fixe_number_066dbc_idx'),
        ),
        migrations.AddIndex(
            model_name='depreciationschedule',
            index=models.Index(fields=['asset', 'year'], name='assets_depr_asset_i_c25a4e_idx'),
        ),
        migrations.AddIndex(
            model_name='depreciationschedule',
            index=models.Index(fields=['period_start_date', 'period_end_date'], name='assets_depr_period__ee90c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='depreciationschedule',
            unique_together={('asset', 'year', 'is_tax_schedule')},
        ),
        migrations.AddIndex(
            model_name='assettransaction',
            index=models.Index(fields=['asset', 'transaction_type'], name='assets_asse_asset_i_364408_idx'),
        ),
        migrations.AddIndex(
            model_name='assettransaction',
            index=models.Index(fields=['transaction_date'], name='assets_asse_transac_a535bf_idx'),
        ),
        migrations.AddIndex(
            model_name='assetdisposal',
            index=models.Index(fields=['disposal_date'], name='assets_asse_disposa_5ced4d_idx'),
        ),
        migrations.AddIndex(
            model_name='assetdisposal',
            index=models.Index(fields=['disposal_method'], name='assets_asse_disposa_b89b85_idx'),
        ),
    ]

# Generated by Django 5.2.6 on 2025-09-24 07:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bank_accounts', '0004_add_company_fields'),
        ('coa', '0008_account_is_bank_account'),
        ('company', '0002_company_address_company_base_currency_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankStatementDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('original_filename', models.CharField(help_text='Original filename as uploaded', max_length=255)),
                ('file_format', models.CharField(choices=[('xlsx', 'Excel'), ('csv', 'CSV')], max_length=10)),
                ('file_size_bytes', models.IntegerField()),
                ('upload_timestamp', models.DateTimeField(auto_now_add=True)),
                ('file_hash', models.CharField(help_text='SHA256 hash for integrity verification', max_length=64)),
                ('verification_checksum', models.CharField(blank=True, max_length=128)),
                ('raw_header_data', models.JSONField(help_text='Exactly as in original file - header rows')),
                ('raw_transaction_data', models.JSONField(help_text='Every cell, every character preserved')),
                ('original_encoding', models.CharField(default='utf-8', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_statement_documents', to='company.company')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-upload_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BankStatementProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('processing_timestamp', models.DateTimeField(auto_now_add=True)),
                ('detected_language', models.CharField(choices=[('mn', 'Mongolian'), ('en', 'English'), ('mixed', 'Mixed Languages')], max_length=10)),
                ('language_confidence', models.DecimalField(decimal_places=4, default=0.0, help_text='Confidence level 0.0000-1.0000', max_digits=5)),
                ('system_account_holder', models.CharField(blank=True, max_length=200)),
                ('system_account_number', models.CharField(blank=True, max_length=50)),
                ('system_account_type', models.CharField(blank=True, help_text='English translation for backend', max_length=50)),
                ('system_currency', models.CharField(default='MNT', max_length=10)),
                ('system_date_range_start', models.DateField(blank=True, null=True)),
                ('system_date_range_end', models.DateField(blank=True, null=True)),
                ('total_transactions', models.IntegerField(default=0)),
                ('successfully_processed', models.IntegerField(default=0)),
                ('failed_translations', models.IntegerField(default=0)),
                ('processing_complete', models.BooleanField(default=False)),
                ('translation_details', models.JSONField(blank=True, help_text='Detailed translation confidence scores', null=True)),
                ('auto_link_confidence', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('user_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('source_document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='processing', to='bank_accounts.bankstatementdocument')),
                ('suggested_coa_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coa.account')),
            ],
            options={
                'ordering': ['-processing_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BankTransactionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.IntegerField(help_text='Position in original file (1-based)')),
                ('original_date_text', models.CharField(help_text='Exactly as in file', max_length=50)),
                ('original_amount_text', models.CharField(help_text='With all original formatting', max_length=50)),
                ('original_description', models.TextField(help_text='Cyrillic/mixed language as-is')),
                ('original_payee', models.CharField(blank=True, help_text='Original payee field', max_length=200)),
                ('original_reference', models.CharField(blank=True, max_length=100)),
                ('original_memo', models.TextField(blank=True, help_text='Any memo/notes field')),
                ('system_date', models.DateField(blank=True, help_text='Parsed for system use', null=True)),
                ('system_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('system_description_english', models.TextField(blank=True, help_text='For searching/matching')),
                ('system_payee_english', models.CharField(blank=True, max_length=200)),
                ('system_category', models.CharField(blank=True, help_text='Auto-categorized transaction type', max_length=50)),
                ('date_parse_confidence', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('amount_parse_confidence', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('description_translation_confidence', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('overall_confidence', models.DecimalField(decimal_places=4, default=0.0, max_digits=5)),
                ('translation_notes', models.JSONField(blank=True, help_text='Detailed translation process info', null=True)),
                ('is_reconciled', models.BooleanField(default=False)),
                ('reconciliation_notes', models.TextField(blank=True)),
                ('reconciliation_date', models.DateTimeField(blank=True, null=True)),
                ('user_verified_translation', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('processing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_records', to='bank_accounts.bankstatementprocessing')),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciled_transactions', to=settings.AUTH_USER_MODEL)),
                ('reconciled_with_coa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coa.account')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_translations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['processing', 'row_number'],
            },
        ),
        migrations.AddField(
            model_name='banktransaction',
            name='source_transaction_record',
            field=models.ForeignKey(blank=True, help_text='Link to original document transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, to='bank_accounts.banktransactionrecord'),
        ),
        migrations.AddIndex(
            model_name='bankstatementdocument',
            index=models.Index(fields=['company', 'upload_timestamp'], name='bank_accoun_company_e8309a_idx'),
        ),
        migrations.AddIndex(
            model_name='bankstatementdocument',
            index=models.Index(fields=['file_hash'], name='bank_accoun_file_ha_8055b7_idx'),
        ),
        migrations.AddIndex(
            model_name='bankstatementdocument',
            index=models.Index(fields=['document_id'], name='bank_accoun_documen_947519_idx'),
        ),
        migrations.AddIndex(
            model_name='bankstatementprocessing',
            index=models.Index(fields=['source_document', 'processing_complete'], name='bank_accoun_source__d36655_idx'),
        ),
        migrations.AddIndex(
            model_name='bankstatementprocessing',
            index=models.Index(fields=['processing_id'], name='bank_accoun_process_a1dc32_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransactionrecord',
            index=models.Index(fields=['processing', 'row_number'], name='bank_accoun_process_f57f86_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransactionrecord',
            index=models.Index(fields=['system_date', 'system_amount'], name='bank_accoun_system__28393f_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransactionrecord',
            index=models.Index(fields=['is_reconciled'], name='bank_accoun_is_reco_9a1936_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransactionrecord',
            index=models.Index(fields=['user_verified_translation'], name='bank_accoun_user_ve_177358_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='banktransactionrecord',
            unique_together={('processing', 'row_number')},
        ),
    ]

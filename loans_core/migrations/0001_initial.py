# Generated by Django 5.2.6 on 2025-09-16 11:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0002_company_address_company_base_currency_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application_id', models.CharField(editable=False, max_length=20)),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('term_months', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)])),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('99.99'))])),
                ('repayment_method', models.CharField(choices=[('equal_principal', 'Equal Principal'), ('equal_payment', 'Equal Payment (Annuity)'), ('custom', 'Custom Schedule'), ('interest_only', 'Interest Only + Balloon')], default='equal_payment', max_length=20)),
                ('payment_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], default='monthly', max_length=20)),
                ('grace_period_months', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)])),
                ('balloon_payment_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Final balloon payment amount', max_digits=12, null=True)),
                ('custom_schedule_config', models.JSONField(blank=True, help_text='JSON configuration for custom payment schedules', null=True)),
                ('application_date', models.DateField(auto_now_add=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('first_payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('purpose', models.TextField(help_text='Purpose of the loan')),
                ('collateral_description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['company', '-application_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text="Product name (e.g., 'Personal Loan - Premium')", max_length=100)),
                ('code', models.CharField(help_text="Unique product code (e.g., 'PL001')", max_length=20)),
                ('category', models.CharField(choices=[('personal', 'Personal Loan'), ('business', 'Business Loan'), ('auto', 'Auto Loan'), ('mortgage', 'Mortgage'), ('education', 'Education Loan')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('min_amount', models.DecimalField(decimal_places=2, help_text='Minimum loan amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('max_amount', models.DecimalField(decimal_places=2, help_text='Maximum loan amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('min_term_months', models.IntegerField(help_text='Minimum loan term in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)])),
                ('max_term_months', models.IntegerField(help_text='Maximum loan term in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)])),
                ('default_interest_rate', models.DecimalField(decimal_places=2, help_text='Default annual interest rate (percentage)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('99.99'))])),
                ('allows_prepayment', models.BooleanField(default=True)),
                ('prepayment_penalty_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Prepayment penalty as percentage of outstanding balance', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('10.00'))])),
                ('grace_period_days', models.IntegerField(default=10, help_text='Grace period before late fees apply', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('late_fee_amount', models.DecimalField(decimal_places=2, default=Decimal('25.00'), help_text='Flat late fee amount', max_digits=10)),
                ('late_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Late fee as percentage of overdue amount', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('25.00'))])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['company', 'category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan_number', models.CharField(editable=False, max_length=20)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('term_months', models.IntegerField()),
                ('monthly_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disbursement_date', models.DateField()),
                ('first_payment_date', models.DateField()),
                ('maturity_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('paid_off', 'Paid Off'), ('defaulted', 'Defaulted'), ('written_off', 'Written Off'), ('restructured', 'Restructured'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('payments_made', models.IntegerField(default=0)),
                ('payments_remaining', models.IntegerField()),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField()),
                ('total_interest_charged', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_fees_charged', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_payments_received', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('days_overdue', models.IntegerField(default=0)),
                ('overdue_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('highest_days_overdue', models.IntegerField(default=0)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-disbursement_date', '-created_at'],
            },
        ),
    ]

# Generated by Django 5.2.6 on 2025-09-16 11:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0002_company_address_company_base_currency_and_more'),
        ('loans_core', '0002_initial'),
        ('loans_customers', '0001_initial'),
        ('loans_schedule', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_id', models.CharField(editable=False, max_length=20)),
                ('transaction_id', models.CharField(blank=True, help_text='External transaction ID from payment processor', max_length=100)),
                ('payment_date', models.DateField()),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('bank_transfer', 'Bank Transfer'), ('ach', 'ACH/Direct Debit'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('money_order', 'Money Order'), ('wire_transfer', 'Wire Transfer'), ('online', 'Online Payment'), ('mobile_app', 'Mobile App')], max_length=20)),
                ('payment_type', models.CharField(choices=[('regular', 'Regular Payment'), ('prepayment', 'Prepayment'), ('late_payment', 'Late Payment'), ('payoff', 'Loan Payoff'), ('fee_payment', 'Fee Payment'), ('partial', 'Partial Payment')], default='regular', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('reference_number', models.CharField(blank=True, help_text='Check number, confirmation number, etc.', max_length=100)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_last_four', models.CharField(blank=True, help_text='Last 4 digits of account', max_length=4)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('late_fee_included', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('net_payment_amount', models.DecimalField(decimal_places=2, help_text='Payment amount minus fees', max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal staff notes')),
                ('failure_reason', models.TextField(blank=True)),
                ('cancelled_reason', models.TextField(blank=True)),
                ('cancelled_date', models.DateTimeField(blank=True, null=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('refund_date', models.DateField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_loan_payments', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='loans_customers.customer')),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='loans_core.loan')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_loan_payments', to=settings.AUTH_USER_MODEL)),
                ('scheduled_payment', models.ForeignKey(blank=True, help_text='Link to scheduled payment if this is for a specific scheduled payment', null=True, on_delete=django.db.models.deletion.SET_NULL, to='loans_schedule.scheduledpayment')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocation_type', models.CharField(choices=[('principal', 'Principal'), ('interest', 'Interest'), ('late_fee', 'Late Fee'), ('processing_fee', 'Processing Fee'), ('prepayment_penalty', 'Prepayment Penalty'), ('other_fee', 'Other Fee')], max_length=20)),
                ('allocation_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('allocation_order', models.IntegerField(help_text='Order in which this allocation was applied')),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=12)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.CharField(help_text='Description of what this allocation covers', max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loans_core.loan')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='loans_payments.payment')),
                ('scheduled_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='loans_schedule.scheduledpayment')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'payment', 'allocation_order'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.CharField(choices=[('created', 'Payment Created'), ('processed', 'Payment Processed'), ('completed', 'Payment Completed'), ('failed', 'Payment Failed'), ('cancelled', 'Payment Cancelled'), ('refunded', 'Payment Refunded'), ('allocated', 'Payment Allocated'), ('updated', 'Payment Updated')], max_length=20)),
                ('action_date', models.DateTimeField(auto_now_add=True)),
                ('old_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(blank=True, max_length=20)),
                ('old_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('new_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('description', models.TextField(help_text='Description of the change or action')),
                ('system_notes', models.TextField(blank=True, help_text='System-generated notes')),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='loans_payments.payment')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-action_date'],
            },
        ),
        migrations.CreateModel(
            name='AutoPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('failed', 'Failed - Needs Attention')], default='active', max_length=20)),
                ('frequency', models.CharField(choices=[('monthly', 'Monthly'), ('bi_monthly', 'Bi-Monthly'), ('quarterly', 'Quarterly')], default='monthly', max_length=20)),
                ('payment_amount', models.DecimalField(decimal_places=2, help_text='Fixed payment amount (leave blank for scheduled amount)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_day', models.IntegerField(help_text='Day of month for payment (1-31)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('bank_account_name', models.CharField(max_length=100)),
                ('bank_routing_number', models.CharField(max_length=20)),
                ('bank_account_number_encrypted', models.CharField(help_text='Encrypted account number', max_length=200)),
                ('account_type', models.CharField(choices=[('checking', 'Checking'), ('savings', 'Savings')], max_length=20)),
                ('max_retry_attempts', models.IntegerField(default=3)),
                ('current_failures', models.IntegerField(default=0)),
                ('last_failure_date', models.DateField(blank=True, null=True)),
                ('last_failure_reason', models.TextField(blank=True)),
                ('next_payment_date', models.DateField()),
                ('next_payment_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agreement_date', models.DateField()),
                ('agreement_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='loans_customers.customer')),
                ('loan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='autopay', to='loans_core.loan')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'loan'],
                'indexes': [models.Index(fields=['company', 'loan', 'status'], name='loans_payme_company_40f0ac_idx'), models.Index(fields=['company', 'next_payment_date', 'is_active'], name='loans_payme_company_71de42_idx'), models.Index(fields=['company', 'status'], name='loans_payme_company_00f5b1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['company', 'loan', 'payment_date'], name='loans_payme_company_1bcbe1_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['company', 'customer', 'payment_date'], name='loans_payme_company_87ad63_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['company', 'payment_id'], name='loans_payme_company_820a1a_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['company', 'status', 'payment_date'], name='loans_payme_company_11eccb_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['company', 'transaction_id'], name='loans_payme_company_3f95ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='payment',
            unique_together={('company', 'payment_id')},
        ),
        migrations.AddIndex(
            model_name='paymentallocation',
            index=models.Index(fields=['company', 'payment', 'allocation_order'], name='loans_payme_company_961a4a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentallocation',
            index=models.Index(fields=['company', 'loan', 'allocation_type'], name='loans_payme_company_6f7505_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentallocation',
            index=models.Index(fields=['company', 'scheduled_payment'], name='loans_payme_company_75faaf_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['company', 'payment', 'action_date'], name='loans_payme_company_39eaee_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenthistory',
            index=models.Index(fields=['company', 'action_type', 'action_date'], name='loans_payme_company_6c42ad_idx'),
        ),
    ]

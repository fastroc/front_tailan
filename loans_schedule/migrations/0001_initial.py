# Generated by Django 5.2.6 on 2025-09-16 11:49

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0002_company_address_company_base_currency_and_more'),
        ('loans_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule_type', models.CharField(choices=[('equal_principal', 'Equal Principal'), ('equal_payment', 'Equal Payment (Annuity)'), ('custom', 'Custom Schedule'), ('interest_only', 'Interest Only + Balloon')], max_length=20)),
                ('payment_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20)),
                ('total_payments', models.IntegerField()),
                ('payments_completed', models.IntegerField(default=0)),
                ('total_principal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_interest', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('grace_period_months', models.IntegerField(default=0)),
                ('balloon_payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('restructured', 'Restructured'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('loan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_schedule', to='loans_core.loan')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'loan'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_number', models.IntegerField(help_text='Sequential payment number (1, 2, 3, ...)')),
                ('payment_type', models.CharField(choices=[('regular', 'Regular Payment'), ('grace', 'Grace Period'), ('balloon', 'Balloon Payment'), ('final', 'Final Payment')], default='regular', max_length=20)),
                ('due_date', models.DateField()),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('interest_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('beginning_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('ending_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('partial', 'Partially Paid'), ('skipped', 'Skipped'), ('waived', 'Waived')], default='scheduled', max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('days_overdue', models.IntegerField(default=0)),
                ('late_fees_assessed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_custom_amount', models.BooleanField(default=False, help_text='True if this payment has a custom amount')),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Original calculated amount if custom amount is used', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_payments', to='loans_core.loan')),
                ('payment_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_payments', to='loans_schedule.paymentschedule')),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'payment_number'],
            },
        ),
        migrations.CreateModel(
            name='CustomPaymentPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text="Preset name (e.g., 'Salary-Based Monthly')", max_length=100)),
                ('description', models.TextField(help_text='Description of when to use this preset')),
                ('preset_type', models.CharField(choices=[('equal_payment', 'Equal Payment'), ('equal_principal', 'Equal Principal'), ('custom', 'Custom Schedule'), ('interest_only', 'Interest Only + Balloon')], max_length=20)),
                ('default_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], default='monthly', max_length=20)),
                ('grace_period_months', models.IntegerField(default=0)),
                ('payment_pattern', models.JSONField(blank=True, help_text='JSON array defining custom payment amounts or percentages', null=True)),
                ('has_balloon_payment', models.BooleanField(default=False)),
                ('balloon_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Balloon payment as percentage of principal', max_digits=5, null=True)),
                ('usage_count', models.IntegerField(default=0, help_text='How many times this preset has been used')),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-usage_count', 'name'],
                'indexes': [models.Index(fields=['company', 'preset_type', 'is_active'], name='loans_sched_company_60be15_idx'), models.Index(fields=['company', 'usage_count'], name='loans_sched_company_849481_idx'), models.Index(fields=['company', 'is_active'], name='loans_sched_company_04f028_idx')],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PaymentDateRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rule_name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('monthly_same_day', 'Same Day Each Month'), ('monthly_last_day', 'Last Day of Month'), ('weekly_same_weekday', 'Same Weekday Each Week'), ('bi_weekly_from_start', 'Every 2 Weeks from Start Date'), ('custom_dates', 'Custom Date List')], max_length=30)),
                ('day_of_month', models.IntegerField(blank=True, help_text='For monthly rules: day of month (1-31)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('weekday', models.IntegerField(blank=True, help_text='For weekly rules: weekday (0=Monday, 6=Sunday)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('custom_dates', models.JSONField(blank=True, help_text='For custom rules: array of specific dates', null=True)),
                ('skip_weekends', models.BooleanField(default=True, help_text='Move weekend dates to next business day')),
                ('skip_holidays', models.BooleanField(default=False, help_text='Move holiday dates to next business day')),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(help_text='Company this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_set', to='company.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', 'rule_name'],
                'indexes': [models.Index(fields=['company', 'rule_type', 'is_active'], name='loans_sched_company_ed9aee_idx'), models.Index(fields=['company', 'is_active'], name='loans_sched_company_d6074a_idx')],
                'unique_together': {('company', 'rule_name')},
            },
        ),
        migrations.AddIndex(
            model_name='paymentschedule',
            index=models.Index(fields=['company', 'loan', 'status'], name='loans_sched_company_e7c070_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentschedule',
            index=models.Index(fields=['company', 'schedule_type'], name='loans_sched_company_84918d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentschedule',
            index=models.Index(fields=['company', 'status'], name='loans_sched_company_9b6b75_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpayment',
            index=models.Index(fields=['company', 'loan', 'due_date'], name='loans_sched_company_2b2e6f_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpayment',
            index=models.Index(fields=['company', 'status', 'due_date'], name='loans_sched_company_db38b3_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpayment',
            index=models.Index(fields=['company', 'payment_schedule', 'payment_number'], name='loans_sched_company_6ca865_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpayment',
            index=models.Index(fields=['company', 'due_date'], name='loans_sched_company_68d3f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scheduledpayment',
            unique_together={('company', 'payment_schedule', 'payment_number')},
        ),
    ]

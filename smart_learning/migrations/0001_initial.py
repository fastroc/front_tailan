# Generated by Django 5.2.6 on 2025-10-01 12:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bank_rules', '0002_remove_bankrule_suggested_what_and_more'),
        ('coa', '0008_account_is_bank_account'),
        ('company', '0002_company_address_company_base_currency_and_more'),
        ('reconciliation', '0005_add_company_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_name', models.CharField(help_text='Human-readable pattern name', max_length=255, unique=True)),
                ('pattern_type', models.CharField(choices=[('exact', 'Exact Match'), ('contains', 'Contains Keyword'), ('regex', 'Regular Expression'), ('fuzzy', 'Fuzzy Match'), ('ml', 'ML Prediction')], default='contains', help_text='Type of pattern matching algorithm', max_length=20)),
                ('description_pattern', models.TextField(help_text='What to look for in transaction description')),
                ('amount_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum amount (optional constraint)', max_digits=15, null=True)),
                ('amount_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum amount (optional constraint)', max_digits=15, null=True)),
                ('transaction_type', models.CharField(blank=True, choices=[('debit', 'Debit'), ('credit', 'Credit')], help_text='Filter by transaction type', max_length=10, null=True)),
                ('suggested_who', models.CharField(help_text='Suggested WHO (contact/payee name)', max_length=255)),
                ('times_seen', models.IntegerField(default=0, help_text='How many times this pattern appeared')),
                ('times_accepted', models.IntegerField(default=0, help_text='How many times user accepted the suggestion')),
                ('times_rejected', models.IntegerField(default=0, help_text='How many times user rejected the suggestion')),
                ('accuracy_rate', models.FloatField(default=0.0, help_text='Acceptance rate percentage (0-100)')),
                ('confidence', models.FloatField(default=50.0, help_text='Pattern confidence score 0-100%')),
                ('is_active', models.BooleanField(default=True, help_text='Is this pattern active and should be used?')),
                ('auto_apply', models.BooleanField(default=False, help_text='Auto-apply this pattern if confidence >90%')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_trained', models.DateTimeField(blank=True, help_text='When this pattern was last retrained', null=True)),
                ('company', models.ForeignKey(blank=True, help_text='Company this pattern belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='smart_patterns', to='company.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_patterns', to=settings.AUTH_USER_MODEL)),
                ('suggested_what', models.ForeignKey(help_text='Suggested WHAT (Chart of Account)', on_delete=django.db.models.deletion.PROTECT, related_name='pattern_suggestions', to='coa.account')),
            ],
            options={
                'verbose_name': 'Match Pattern',
                'verbose_name_plural': 'Match Patterns',
                'db_table': 'smart_match_pattern',
                'ordering': ['-accuracy_rate', '-times_seen'],
            },
        ),
        migrations.CreateModel(
            name='TransactionMatchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField()),
                ('transaction_description', models.TextField()),
                ('transaction_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transaction_type', models.CharField(choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=10)),
                ('matched_who', models.CharField(help_text='Customer/vendor name matched', max_length=255)),
                ('match_source', models.CharField(choices=[('manual', 'Manual Entry'), ('rule', 'Bank Rule'), ('pattern', 'AI Pattern'), ('hybrid', 'Rule + AI')], default='manual', max_length=20)),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score 0-100%')),
                ('user_accepted', models.BooleanField(blank=True, help_text='Did user accept the suggestion as-is?', null=True)),
                ('user_modified', models.BooleanField(default=False, help_text='Did user modify the suggestion?')),
                ('matched_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('bank_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_history', to='bank_rules.bankrule')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_match_history', to='company.company')),
                ('match_pattern', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_history', to='smart_learning.matchpattern')),
                ('matched_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('matched_what', models.ForeignKey(help_text='Chart of Account matched', on_delete=django.db.models.deletion.PROTECT, related_name='match_history', to='coa.account')),
                ('transaction_match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='learning_history', to='reconciliation.transactionmatch')),
            ],
            options={
                'verbose_name': 'Transaction Match History',
                'verbose_name_plural': 'Transaction Match Histories',
                'db_table': 'smart_match_history',
                'ordering': ['-matched_at'],
            },
        ),
        migrations.CreateModel(
            name='MatchFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_who', models.CharField(max_length=255)),
                ('suggestion_source', models.CharField(choices=[('rule', 'Bank Rule'), ('pattern', 'AI Pattern'), ('hybrid', 'Hybrid')], max_length=20)),
                ('confidence_score', models.FloatField()),
                ('action', models.CharField(choices=[('accepted', 'Accepted as-is'), ('modified', 'Modified suggestion'), ('rejected', 'Rejected entirely')], max_length=20)),
                ('actual_who', models.CharField(blank=True, help_text='What user actually entered for WHO', max_length=255, null=True)),
                ('response_time_seconds', models.IntegerField(blank=True, help_text='How long user took to decide', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actual_what', models.ForeignKey(blank=True, help_text='What user actually selected for WHAT', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='feedback_as_actual', to='coa.account')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_feedbacks', to='company.company')),
                ('suggested_what', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_as_suggestion', to='coa.account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('match_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='smart_learning.transactionmatchhistory')),
            ],
            options={
                'verbose_name': 'Match Feedback',
                'verbose_name_plural': 'Match Feedbacks',
                'db_table': 'smart_match_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConfidenceScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence_range', models.CharField(choices=[('0-20', 'Very Low (0-20%)'), ('20-40', 'Low (20-40%)'), ('40-60', 'Medium (40-60%)'), ('60-80', 'High (60-80%)'), ('80-100', 'Very High (80-100%)')], max_length=20)),
                ('total_suggestions', models.IntegerField(default=0, help_text='How many suggestions made in this confidence range')),
                ('accepted_suggestions', models.IntegerField(default=0, help_text='How many were accepted')),
                ('actual_accuracy', models.FloatField(default=0.0, help_text='Actual acceptance rate %')),
                ('calibration_error', models.FloatField(default=0.0, help_text='Difference between predicted and actual confidence')),
                ('date', models.DateField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confidence_scores', to='company.company')),
            ],
            options={
                'verbose_name': 'Confidence Score',
                'verbose_name_plural': 'Confidence Scores',
                'db_table': 'smart_confidence_score',
                'ordering': ['-date'],
                'unique_together': {('confidence_range', 'date', 'company')},
            },
        ),
        migrations.AddIndex(
            model_name='matchpattern',
            index=models.Index(fields=['is_active', '-accuracy_rate'], name='smart_match_is_acti_c161b9_idx'),
        ),
        migrations.AddIndex(
            model_name='matchpattern',
            index=models.Index(fields=['pattern_type'], name='smart_match_pattern_2ea26a_idx'),
        ),
        migrations.AddIndex(
            model_name='matchpattern',
            index=models.Index(fields=['company', 'is_active'], name='smart_match_company_a2ca6c_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['transaction_date'], name='smart_match_transac_e076ec_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['matched_who'], name='smart_match_matched_172f3e_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['match_source'], name='smart_match_match_s_6b3929_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['confidence_score'], name='smart_match_confide_40572b_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['company', '-matched_at'], name='smart_match_company_16d852_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmatchhistory',
            index=models.Index(fields=['user_accepted'], name='smart_match_user_ac_380c7b_idx'),
        ),
    ]
